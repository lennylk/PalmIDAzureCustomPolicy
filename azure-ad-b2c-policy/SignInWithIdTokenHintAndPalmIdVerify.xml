<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<TrustFrameworkPolicy
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns="http://schemas.microsoft.com/online/cpim/schemas/2013/06"
  PolicySchemaVersion="0.3.0.0"
  TenantId="redrockbiometricsdemo.onmicrosoft.com"
  PolicyId="B2C_1A_signinwithidtoken_and_palmidverify"
  PublicPolicyUri="http://redrockbiometricsdemo.onmicrosoft.com/B2C_1A_signinwithidtoken_and_palmidverify"
>

  <BasePolicy>
    <TenantId>redrockbiometricsdemo.onmicrosoft.com</TenantId>
    <PolicyId>B2C_1A_TrustFrameworkExtensions</PolicyId>
  </BasePolicy>

  <UserJourneys>
    <UserJourney Id="SignInWithIdTokenAndPalmIdVerify">
      <OrchestrationSteps>
        <!-- Read the input claims from the id_token_hint -->
        <OrchestrationStep Order="1" Type="GetClaims" CpimIssuerTechnicalProfileReferenceId="IdTokenHint_ExtractClaims" />

        <!-- Check if policy doesn't have valid id_token_hint -->
        <OrchestrationStep Order="2" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>idTokenHintObjectId</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="SelfAsserted-Unsolicited" TechnicalProfileReferenceId="SelfAsserted-Unsolicited" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- Read the extension_palmIdUserId from the directory by idTokenHintObjectId-->
        <OrchestrationStep Order="3" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="AADUserReadUsingIdHintObjectId" TechnicalProfileReferenceId="AAD-UserReadExtensionPalmIdUserIdUsingIdHintObjectId"/>
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- Check whether the user not existed in the directory -->
        <OrchestrationStep Order="4" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>objectId</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="SelfAssertedUserNotFound" TechnicalProfileReferenceId="SelfAsserted-UserNotFound" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- Check whether the user does not have extension_palmIdUserId -->
        <OrchestrationStep Order="5" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
              <Value>extension_palmIdUserId</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <ClaimsExchange Id="SelfAssertedUserPalmIdNotFound" TechnicalProfileReferenceId="SelfAsserted-UserPalmIdNotFound" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- Run PalmID OIDC with login_hint and assert response sub is equal to extension_palmIdUserId -->
        <OrchestrationStep Order="6" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="VerifyPalmIDExchange" TechnicalProfileReferenceId="PalmID-OIDC-Verify" />
          </ClaimsExchanges>
        </OrchestrationStep>

        <!-- Issue an access token-->
        <OrchestrationStep Order="7" Type="SendClaims" CpimIssuerTechnicalProfileReferenceId="JwtIssuer"/>
      </OrchestrationSteps>
      <ClientDefinition ReferenceId="DefaultWeb"/>
    </UserJourney>
  </UserJourneys>

  <RelyingParty>
    <DefaultUserJourney ReferenceId="SignInWithIdTokenAndPalmIdVerify" />
    <TechnicalProfile Id="PolicyProfile">
      <DisplayName>PolicyProfile</DisplayName>
      <Protocol Name="OpenIdConnect" />
      <!--Set idTokenHintObjectId to be read from the id_token_hint's sub claim-->
      <InputClaims>
        <InputClaim ClaimTypeReferenceId="idTokenHintObjectId" PartnerClaimType="sub" />
      </InputClaims>
      <OutputClaims>
        <OutputClaim ClaimTypeReferenceId="objectId" PartnerClaimType="sub"/>
        <!-- Pass throw requested trx_id -->
        <OutputClaim ClaimTypeReferenceId="trx_id" DefaultValue="{oauth-kv:trx_id}" AlwaysUseDefaultValue="true"/>
      </OutputClaims>
      <SubjectNamingInfo ClaimType="sub" />
    </TechnicalProfile>
  </RelyingParty>
</TrustFrameworkPolicy>
